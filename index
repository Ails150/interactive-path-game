<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Interactive Path Game with Buzz the Bee</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #87ceeb;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
        }
        .path-container {
            position: relative;
            width: 800px;
            height: 500px;
            background-image: url('https://therealmeacademy.com/wp-content/uploads/2023/07/HighresScreenshot00007.png');
            background-size: cover;
            border: 2px solid #ccc;
            border-radius: 15px;
        }
        .path-section {
            position: absolute;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            width: 50px;
            height: 50px;
            border-radius: 50%;
            background-color: orange;
            color: white;
            cursor: pointer;
            z-index: 3;
        }
        .checkbox {
            position: absolute;
            z-index: 4;
            width: 25px;
            height: 25px;
            background-color: purple;
            border: 2px solid white;
            border-radius: 5px;
            cursor: pointer;
        }
        .character {
            position: absolute;
            width: 30px;
            height: 30px;
            background-image: url('https://therealmeacademy.com/wp-content/uploads/2024/05/I-AM-HERE-1.png');
            background-size: contain;
            background-repeat: no-repeat;
        }
        .popup {
            display: none;
            position: fixed;
            top: 10%;
            left: 50%;
            transform: translate(-50%, 0);
            background-color: white;
            border: 2px solid purple;
            padding: 20px;
            border-radius: 15px;
            z-index: 10;
            max-width: 300px;
            text-align: center;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
        }
        .popup span {
            cursor: pointer;
            color: purple;
            font-weight: bold;
            position: absolute;
            top: 5px;
            right: 5px;
        }
        .popup-content {
            color: black;
        }
        .congrats {
            display: none;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background-color: white;
            border: 2px solid #4CAF50;
            padding: 20px;
            text-align: center;
            z-index: 11;
            font-size: 24px;
            color: #4CAF50;
            border-radius: 15px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
        }
        .congrats button {
            margin-top: 10px;
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }
    </style>
</head>
<body>
    <div id="root"></div>
    <script src="https://unpkg.com/react/umd/react.development.js"></script>
    <script src="https://unpkg.com/react-dom/umd/react-dom.development.js"></script>
    <script src="https://unpkg.com/babel-standalone"></script>
    <script type="text/babel">
        const PathGame = () => {
            const [popups, setPopups] = React.useState({});
            const [completedSections, setCompletedSections] = React.useState({});
            const [showCongrats, setShowCongrats] = React.useState(false);

            const showPopup = (popupId) => {
                setPopups({ ...popups, [popupId]: true });
            };

            const closePopup = (popupId) => {
                setPopups({ ...popups, [popupId]: false });
            };

            const completeSection = (checkboxId, nextSectionId, characterId) => {
                setCompletedSections({ ...completedSections, [checkboxId]: true });
                if (characterId) {
                    document.getElementById(characterId).style.display = 'block';
                }
                if (!nextSectionId) {
                    setShowCongrats(true);
                }
            };

            const closeCongrats = () => {
                setShowCongrats(false);
            };

            return (
                <div className="path-container">
                    {[
                        { id: 1, top: 60, left: 60, popup: "Welcome to The Real Me Academy, Buzz and friends are excited to go on this exciting personal development journey with you and your friends." },
                        { id: 2, top: 140, left: 160, popup: "Your children should be talking explicitly about what they are grateful for, both as a morning routine and throughout the day." },
                        { id: 3, top: 220, left: 260, popup: "Your children should be talking about how their actions are related to how they think and feel using their affirmations daily to improve how they think and feel about themselves catch and challenge negative self talk (self and others)." },
                        { id: 4, top: 300, left: 360, popup: "Your children should be able to explain that they control their thoughts, good or bad. The thoughts they give attention to will grow. Their thoughts are connected to how they feel and act. Thinking is a habit. Children are more aware that the way they act is linked to how they think. Your children should be able to tell you about how they change situations and results by changing the way they think about it." },
                        { id: 5, top: 380, left: 460, popup: "Your children should be able to explain: Thinking is a habit so it can be good or bad. That they can use their imagination for good or bad. When they use their imagination for good they can be more creative. Using their imagination helps them set goals." },
                        { id: 6, top: 300, left: 560, popup: "Your children should have developed good thinking habits. Set and achieve their goal. Understand that setbacks are part of learning. Be aware of how to think differently about a situation so they get the outcome they want. They are confident and have improved self-esteem and self-belief." },
                        { id: 7, top: 220, left: 660, popup: "Your children should be able to put all of their learning into practice to believe in who they are. Set goals for themselves. Develop confidence and a positive attitude. Challenge negative thinking. Present and share their learning to an audience." }
                    ].map((section) => (
                        <div key={section.id}>
                            <div className="path-section" style={{ top: section.top, left: section.left }}>
                                <button onClick={() => showPopup(`popup${section.id}`)}>Section {section.id}</button>
                                {popups[`popup${section.id}`] && (
                                    <div className="popup show">
                                        <span onClick={() => closePopup(`popup${section.id}`)}>X</span>
                                        <div className="popup-content">
                                            <p>{section.popup}</p>
                                        </div>
                                    </div>
                                )}
                            </div>
                            <input
                                className="checkbox"
                                type="checkbox"
                                id={`checkbox${section.id}`}
                                style={{ top: section.top + 50, left: section.left + 25 }}
                                onChange={() => completeSection(`checkbox${section.id}`, `section${section.id + 1}`, `character${section.id}`)}
                            />
                            <div className="character" id={`character${section.id}`} style={{ top: section.top, left: section.left + 60, display: 'none' }}></div>
                        </div>
                    ))}
                    {showCongrats && (
                        <div className="congrats show">
                            <p>Congratulations! You completed the BeeMe Journey. Remember, the key is repetition. Read your final story <a href="#">here</a>.</p>
                            <button onClick={closeCongrats}>Exit</button>
                        </div>
                    )}
                </div>
            );
        };

        ReactDOM.render(<PathGame />, document.getElementById('root'));
    </script>
</body>
</html>
